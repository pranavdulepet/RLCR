#!/bin/bash
# RLCR Full Reproduction Pipeline for BRTX Cluster
# This script coordinates the entire reproduction process

set -e

USER_SCRATCH="/srv/local1/$USER"
WORK_DIR="$USER_SCRATCH/rlcr-reproduce/RLCR"

echo "üöÄ RLCR Full Reproduction Pipeline for BRTX"
echo "=============================================="
echo ""

# Check if we're in the right directory
if [ ! -f "$WORK_DIR/README.md" ]; then
    echo "‚ùå RLCR repository not found at $WORK_DIR"
    echo "Please ensure the repository is cloned to: $WORK_DIR"
    exit 1
fi

cd $WORK_DIR

echo "üìç Working directory: $(pwd)"
echo "üë§ User: $USER"
echo "üíæ Scratch space: $USER_SCRATCH"
echo ""

# Copy scripts to work directory
echo "üìã Setting up training scripts..."
cp /path/to/scripts/*.sh .
chmod +x *.sh

echo ""
echo "üéØ Available training jobs:"
echo "1. RLCR HotpotQA:  sbatch train_rlcr_hotpot_brtx.sh"
echo "2. RLVR HotpotQA:  sbatch train_rlvr_hotpot_brtx.sh"  
echo "3. RLCR Math:      sbatch train_rlcr_math_brtx.sh"
echo "4. Full Evaluation: sbatch eval_all_brtx.sh"
echo ""

echo "‚ö†Ô∏è  IMPORTANT NOTES:"
echo "‚Ä¢ Math training uses ba100 partition (6 GPUs, 48h)"
echo "‚Ä¢ Other jobs use brtx6 partition (4 GPUs, 24h)"
echo "‚Ä¢ Ensure you have wandb login configured"
echo "‚Ä¢ Monitor jobs with: squeue -u $USER"
echo "‚Ä¢ Check GPU usage: gpustat or http://brtx.ccmaymay.net"
echo ""

echo "üìä Expected resource usage:"
echo "‚Ä¢ RLCR/RLVR HotpotQA: ~4 GPUs √ó 20-24 hours"
echo "‚Ä¢ RLCR Math: ~6 GPUs √ó 40-48 hours" 
echo "‚Ä¢ Storage: ~50-100GB per trained model"
echo ""

read -p "ü§î Would you like to submit all training jobs? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "üöÄ Submitting all training jobs..."
    
    # Submit HotpotQA jobs
    echo "Submitting RLCR HotpotQA job..."
    RLCR_JOB=$(sbatch --parsable train_rlcr_hotpot_brtx.sh)
    echo "Job ID: $RLCR_JOB"
    
    echo "Submitting RLVR HotpotQA job..."
    RLVR_JOB=$(sbatch --parsable train_rlvr_hotpot_brtx.sh)
    echo "Job ID: $RLVR_JOB"
    
    # Submit Math job
    echo "Submitting RLCR Math job..."
    MATH_JOB=$(sbatch --parsable train_rlcr_math_brtx.sh)
    echo "Job ID: $MATH_JOB"
    
    # Submit evaluation job (depends on training completion)
    echo "Submitting evaluation job (depends on training completion)..."
    EVAL_JOB=$(sbatch --parsable --dependency=afterok:$RLCR_JOB:$RLVR_JOB:$MATH_JOB eval_all_brtx.sh)
    echo "Job ID: $EVAL_JOB"
    
    echo ""
    echo "‚úÖ All jobs submitted successfully!"
    echo "üìã Job IDs:"
    echo "  RLCR HotpotQA: $RLCR_JOB"
    echo "  RLVR HotpotQA: $RLVR_JOB"
    echo "  RLCR Math:     $MATH_JOB"
    echo "  Evaluation:    $EVAL_JOB (waiting for training completion)"
    echo ""
    echo "üîç Monitor progress:"
    echo "  squeue -u $USER"
    echo "  tail -f $USER_SCRATCH/logs/rlcr-*-\$SLURM_JOB_ID.out"
    
else
    echo ""
    echo "‚ÑπÔ∏è  Manual submission:"
    echo "1. Review and customize configs if needed"
    echo "2. Submit individual jobs:"
    echo "   sbatch train_rlcr_hotpot_brtx.sh"
    echo "   sbatch train_rlvr_hotpot_brtx.sh"
    echo "   sbatch train_rlcr_math_brtx.sh"
    echo "3. After training completes:"
    echo "   sbatch eval_all_brtx.sh"
fi

echo ""
echo "üîó Useful monitoring commands:"
echo "‚Ä¢ squeue -u $USER                    # Check your job queue"
echo "‚Ä¢ scancel <job_id>                   # Cancel a specific job"
echo "‚Ä¢ seff <job_id>                      # Job efficiency after completion"
echo "‚Ä¢ gpustat                            # Real-time GPU usage"
echo "‚Ä¢ df -h $USER_SCRATCH                # Check storage usage"
echo ""
echo "üìÇ Output locations:"
echo "‚Ä¢ Training outputs: $USER_SCRATCH/outputs/"
echo "‚Ä¢ Logs: $USER_SCRATCH/logs/"
echo "‚Ä¢ Evaluation results: $WORK_DIR/results/"
echo ""
echo "üéâ Setup complete! Happy training! üöÄ"